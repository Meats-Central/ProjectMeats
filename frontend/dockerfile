# # Use Node 20 to match Storybook engines and avoid EBADENGINE warnings
# FROM node:20-alpine AS build
# WORKDIR /app

# # 1) Install deps
# COPY frontend/package*.json ./frontend/
# RUN cd frontend && npm ci

# # 2) Copy sources INCLUDING the shared/ folder your TS imports use
# COPY frontend ./frontend
# COPY shared  ./shared

# # 3) Build from inside frontend
# WORKDIR /app/frontend
# # Optional: ensure CRA treats this as CI (non-interactive)
# ENV CI=true
# RUN npm run build

# # Runtime
# FROM nginx:alpine
# COPY deploy/nginx/frontend.conf /etc/nginx/conf.d/default.conf
# COPY --from=build /app/frontend/build /usr/share/nginx/html
# EXPOSE 80
# HEALTHCHECK --interval=30s --timeout=3s CMD wget -qO- http://127.0.0.1/ || exit 1


# Use Node 20 to match Storybook engines and avoid EBADENGINE warnings
FROM node:20-alpine AS build
WORKDIR /app

# Accept build-time React environment variables
ARG REACT_APP_API_BASE_URL
ARG REACT_APP_ENVIRONMENT
ARG REACT_APP_AI_ASSISTANT_ENABLED
ARG REACT_APP_ENABLE_DOCUMENT_UPLOAD
ARG REACT_APP_ENABLE_CHAT_EXPORT
ARG REACT_APP_MAX_FILE_SIZE
ARG REACT_APP_SUPPORTED_FILE_TYPES
ARG REACT_APP_ENABLE_DEBUG
ARG REACT_APP_ENABLE_DEVTOOLS

# Set them as ENV for the build step
ENV REACT_APP_API_BASE_URL=$REACT_APP_API_BASE_URL \
    REACT_APP_ENVIRONMENT=$REACT_APP_ENVIRONMENT \
    REACT_APP_AI_ASSISTANT_ENABLED=$REACT_APP_AI_ASSISTANT_ENABLED \
    REACT_APP_ENABLE_DOCUMENT_UPLOAD=$REACT_APP_ENABLE_DOCUMENT_UPLOAD \
    REACT_APP_ENABLE_CHAT_EXPORT=$REACT_APP_ENABLE_CHAT_EXPORT \
    REACT_APP_MAX_FILE_SIZE=$REACT_APP_MAX_FILE_SIZE \
    REACT_APP_SUPPORTED_FILE_TYPES=$REACT_APP_SUPPORTED_FILE_TYPES \
    REACT_APP_ENABLE_DEBUG=$REACT_APP_ENABLE_DEBUG \
    REACT_APP_ENABLE_DEVTOOLS=$REACT_APP_ENABLE_DEVTOOLS

# 1) Install dependencies
COPY frontend/package*.json ./frontend/
RUN cd frontend && npm ci

# 2) Copy project sources including shared components
COPY frontend ./frontend
COPY shared  ./shared

# 3) Build the production React app
WORKDIR /app/frontend
ENV CI=true
RUN npm run build

# Runtime stage: serve with Nginx
FROM nginx:alpine
COPY deploy/nginx/frontend.conf /etc/nginx/conf.d/default.conf
COPY --from=build /app/frontend/build /usr/share/nginx/html

EXPOSE 80
HEALTHCHECK --interval=30s --timeout=3s CMD wget -qO- http://127.0.0.1/ || exit 1
