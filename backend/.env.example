# ProjectMeats Backend Environment Configuration
# 
# RECOMMENDED: Use the centralized configuration system for better management:
# 1. python config/manage_env.py setup development
# 2. python config/manage_env.py validate
#
# For advanced configuration, see: config/README.md and docs/ENVIRONMENT_GUIDE.md
#
# Legacy configuration (for backward compatibility)
DEBUG=True
SECRET_KEY=django-insecure-dev-key-change-in-production-3k2j5h2k5j3h5k2j3h5k2j3
DJANGO_SETTINGS_MODULE=projectmeats.settings.development
ALLOWED_HOSTS=localhost,127.0.0.1,testserver

# Database Configuration (Development - SQLite)
# TEMPORARY: Development uses SQLite for simplicity due to Postgres server not being set up
# This is a temporary measure to unblock deployments - plan to revert to PostgreSQL
# for environment parity with staging/production once Postgres is properly configured.
# Note: This deviates from UAT/prod environments which use PostgreSQL.
# 
# For now, no additional setup is required - SQLite will work out of the box.
# When reverting to PostgreSQL in the future:
# 1. Install PostgreSQL locally (brew install postgresql or apt-get install postgresql)
# 2. Start PostgreSQL service
# 3. Create database and user:
#    createdb projectmeats_dev
#    createuser -P projectmeats_dev  (set password: devpassword)
#    psql -d projectmeats_dev -c "GRANT ALL PRIVILEGES ON DATABASE projectmeats_dev TO projectmeats_dev;"
# 4. Update DATABASE_URL to: postgresql://projectmeats_dev:devpassword@localhost:5432/projectmeats_dev
#
DATABASE_URL=sqlite:///db.sqlite3

# CORS Settings (for React development server)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# API Configuration
API_VERSION=v1

# Email Configuration (Development)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# Media and Static Files
MEDIA_ROOT=media/
STATIC_ROOT=staticfiles/

# Logging Level
LOG_LEVEL=DEBUG
