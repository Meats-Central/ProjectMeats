# Generated by Django 4.2.7 on 2025-10-08 23:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tenants", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "product_code",
                    models.CharField(
                        help_text="Unique product code", max_length=50, unique=True
                    ),
                ),
                (
                    "description_of_product_item",
                    models.TextField(
                        help_text="Detailed description of the product item"
                    ),
                ),
                (
                    "type_of_protein",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Beef", "Beef"),
                            ("Chicken", "Chicken"),
                            ("Pork", "Pork"),
                            ("Lamb", "Lamb"),
                            ("Turkey", "Turkey"),
                            ("Fish", "Fish"),
                            ("Other", "Other"),
                        ],
                        help_text="Type of protein (e.g., Beef, Chicken, Pork)",
                        max_length=50,
                    ),
                ),
                (
                    "fresh_or_frozen",
                    models.CharField(
                        blank=True,
                        choices=[("Fresh", "Fresh"), ("Frozen", "Frozen")],
                        help_text="Product state (Fresh or Frozen)",
                        max_length=20,
                    ),
                ),
                (
                    "package_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Boxed wax lined", "Boxed wax lined"),
                            ("Combo bins", "Combo bins"),
                            ("Totes", "Totes"),
                            ("Bags", "Bags"),
                            ("Bulk", "Bulk"),
                        ],
                        help_text="Package type (e.g., Boxed wax lined, Combo bins)",
                        max_length=50,
                    ),
                ),
                (
                    "net_or_catch",
                    models.CharField(
                        blank=True,
                        choices=[("Net", "Net"), ("Catch", "Catch")],
                        help_text="Weight type (Net or Catch)",
                        max_length=20,
                    ),
                ),
                (
                    "edible_or_inedible",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Edible", "Edible"),
                            ("Inedible", "Inedible"),
                            ("Edible & Inedible", "Edible & Inedible"),
                        ],
                        help_text="Edible or inedible product",
                        max_length=50,
                    ),
                ),
                (
                    "tested_product",
                    models.BooleanField(
                        default=False, help_text="Is this a tested product?"
                    ),
                ),
                (
                    "unit_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Standard unit weight",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is this product active?"
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Tenant that owns this product",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["product_code"],
            },
        ),
    ]
