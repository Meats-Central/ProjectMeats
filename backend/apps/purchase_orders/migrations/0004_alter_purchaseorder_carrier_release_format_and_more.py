# Generated by Django 4.2.7 on 2025-10-13 06:30

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("products", "0002_product_carton_type_product_namp_product_origin_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("suppliers", "0006_alter_supplier_package_type"),
        ("plants", "0004_alter_plant_address_alter_plant_city_and_more"),
        ("sales_orders", "0002_alter_salesorder_carrier_release_num_and_more"),
        ("tenants", "0002_alter_tenant_contact_phone_tenantinvitation_and_more"),
        ("carriers", "0004_alter_carrier_account_line_of_credit_and_more"),
        ("purchase_orders", "0003_purchaseorder_carrier_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="purchaseorder",
            name="carrier_release_format",
            field=models.CharField(
                blank=True,
                choices=[
                    (
                        "Supplier Confirmation Order Number",
                        "Supplier Confirmation Order Number",
                    ),
                    ("Carrier Release Number", "Carrier Release Number"),
                    ("Both", "Both"),
                ],
                default="",
                help_text="Carrier release format",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="carrier_release_num",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Carrier release number",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="how_carrier_make_appointment",
            field=models.CharField(
                blank=True,
                choices=[
                    ("Email", "Email"),
                    ("Phone", "Phone"),
                    ("Website", "Website"),
                    ("Fax", "Fax"),
                    ("FCFS", "FCFS"),
                ],
                default="",
                help_text="How carrier makes appointments",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="our_purchase_order_num",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Our internal purchase order number",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="supplier_confirmation_order_num",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Supplier's confirmation order number",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="purchaseorder",
            name="total_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Total order amount",
                max_digits=10,
            ),
        ),
        migrations.CreateModel(
            name="ColdStorageEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "date_time_stamp_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when entry was created",
                    ),
                ),
                (
                    "status_of_load",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Matched", "Matched"),
                            ("TBD - Not Matched", "TBD - Not Matched"),
                        ],
                        default="",
                        help_text="Load matching status",
                        max_length=50,
                    ),
                ),
                (
                    "item_production_date",
                    models.DateField(
                        blank=True, help_text="Item production date", null=True
                    ),
                ),
                (
                    "item_description",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Description of item (e.g., 50% Beef Trim fresh - Tested)",
                    ),
                ),
                (
                    "finished_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Finished weight after boxing",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "shrink",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Shrink amount",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "boxing_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cost of boxing",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cold_storage_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cost of cold storage",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total cost (boxing + cold storage)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, default="", help_text="Additional notes"
                    ),
                ),
                (
                    "customer_sales_order",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related customer sales order",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cold_storage_entries",
                        to="sales_orders.salesorder",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product being stored",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.product",
                    ),
                ),
                (
                    "supplier_po",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related supplier purchase order",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cold_storage_entries",
                        to="purchase_orders.purchaseorder",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Tenant that owns this cold storage entry",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cold_storage_entries",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cold Storage Entry",
                "verbose_name_plural": "Cold Storage Entries",
                "ordering": ["-date_time_stamp_created", "-created_on"],
            },
        ),
        migrations.CreateModel(
            name="CarrierPurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "date_time_stamp_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when carrier PO was created",
                    ),
                ),
                (
                    "pick_up_date",
                    models.DateField(
                        blank=True, help_text="Scheduled pick up date", null=True
                    ),
                ),
                (
                    "delivery_date",
                    models.DateField(
                        blank=True, help_text="Scheduled delivery date", null=True
                    ),
                ),
                (
                    "our_carrier_po_num",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Our carrier purchase order number",
                        max_length=100,
                    ),
                ),
                (
                    "carrier_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Carrier company name",
                        max_length=255,
                    ),
                ),
                (
                    "payment_terms",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Wire", "Wire"),
                            ("ACH", "ACH"),
                            ("Check", "Check"),
                            ("Credit Card", "Credit Card"),
                        ],
                        default="",
                        help_text="Payment terms (e.g., Wire, ACH, Check)",
                        max_length=50,
                    ),
                ),
                (
                    "credit_limits",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Wire 1 day prior", "Wire 1 day prior"),
                            ("Net 7", "Net 7"),
                            ("Net 15", "Net 15"),
                            ("Net 30", "Net 30"),
                            ("Net 45", "Net 45"),
                            ("Net 60", "Net 60"),
                        ],
                        default="",
                        help_text="Credit limits/terms",
                        max_length=50,
                    ),
                ),
                (
                    "type_of_protein",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Beef", "Beef"),
                            ("Chicken", "Chicken"),
                            ("Pork", "Pork"),
                            ("Lamb", "Lamb"),
                            ("Turkey", "Turkey"),
                            ("Fish", "Fish"),
                            ("Horse", "Horse"),
                            ("Other", "Other"),
                        ],
                        default="",
                        help_text="Type of protein",
                        max_length=50,
                    ),
                ),
                (
                    "fresh_or_frozen",
                    models.CharField(
                        blank=True,
                        choices=[("Fresh", "Fresh"), ("Frozen", "Frozen")],
                        default="",
                        help_text="Product state (Fresh or Frozen)",
                        max_length=20,
                    ),
                ),
                (
                    "package_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Boxed wax lined", "Boxed wax lined"),
                            ("Boxed CO2", "Boxed CO2"),
                            ("Combo bins", "Combo bins"),
                            ("Totes", "Totes"),
                            ("Bags", "Bags"),
                            ("Bulk", "Bulk"),
                            ("Poly-Multiple", "Poly-Multiple"),
                            ("Nude", "Nude"),
                        ],
                        default="",
                        help_text="Package type",
                        max_length=50,
                    ),
                ),
                (
                    "net_or_catch",
                    models.CharField(
                        blank=True,
                        choices=[("Net", "Net"), ("Catch", "Catch")],
                        default="",
                        help_text="Weight type (Net or Catch)",
                        max_length=50,
                    ),
                ),
                (
                    "changed_data",
                    models.JSONField(
                        help_text="JSON representation of changed fields and their values"
                    ),
                ),
                (
                    "change_type",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("updated", "Updated"),
                            ("deleted", "Deleted"),
                        ],
                        default="updated",
                        help_text="Type of change made",
                        max_length=20,
                    ),
                ),
                (
                    "edible_or_inedible",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Edible", "Edible"),
                            ("Inedible", "Inedible"),
                            ("Edible & Inedible", "Edible & Inedible"),
                        ],
                        default="",
                        help_text="Edible or inedible product",
                        max_length=50,
                    ),
                ),
                (
                    "total_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total weight",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "weight_unit",
                    models.CharField(
                        choices=[("LBS", "LBS"), ("KG", "KG")],
                        default="LBS",
                        help_text="Unit of weight (LBS or KG)",
                        max_length=10,
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        blank=True, help_text="Quantity of items", null=True
                    ),
                ),
                (
                    "how_carrier_make_appointment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Email", "Email"),
                            ("Phone", "Phone"),
                            ("Website", "Website"),
                            ("Fax", "Fax"),
                            ("FCFS", "FCFS"),
                        ],
                        default="",
                        help_text="How carrier makes appointments",
                        max_length=50,
                    ),
                ),
                (
                    "departments_of_carrier",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Departments (comma-separated: BOL, COA, POD, etc.)",
                        max_length=255,
                    ),
                ),
                (
                    "carrier",
                    models.ForeignKey(
                        help_text="Carrier for this purchase order",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="carriers.carrier",
                    ),
                ),
                (
                    "plant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Plant/facility for this order",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="plants.plant",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product being ordered",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="products.product",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        help_text="Supplier for this carrier purchase order",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="suppliers.supplier",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Tenant that owns this carrier purchase order",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carrier_purchase_orders",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Carrier Purchase Order",
                "verbose_name_plural": "Carrier Purchase Orders",
                "ordering": ["-date_time_stamp_created", "-created_on"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrderHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "changed_data",
                    models.JSONField(
                        help_text="JSON representation of changed fields and their values"
                    ),
                ),
                (
                    "change_type",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("updated", "Updated"),
                            ("deleted", "Deleted"),
                        ],
                        default="updated",
                        help_text="Type of change made",
                        max_length=20,
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who made the change",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        help_text="Purchase order this history entry belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="purchase_orders.purchaseorder",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Order History",
                "verbose_name_plural": "Purchase Order Histories",
                "ordering": ["-created_on"],
                "indexes": [
                    models.Index(
                        fields=["purchase_order", "-created_on"],
                        name="purchase_or_purchas_dafcda_idx",
                    )
                ],
            },
        ),
    ]
