version: "3.8"

networks:
  edge:        # public edge (Traefik + app services that must be reachable)
  app:         # private app network (DB/cache/backend)

volumes:
  letsencrypt:   # Traefik ACME store
  pg_data:

services:
  traefik:
    image: traefik:v3.5.2
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      # Redirect all HTTP to HTTPS
      - "traefik.enable=true"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    networks:
      - edge

  api:
    image: ${IMAGE_TAG_BACKEND}
    restart: unless-stopped
    env_file:
      - env/uat.env
      - env/image.env
    labels:
      - "traefik.enable=true"
      # Catch everything on the host (except api which has higher priority)
      - "traefik.http.routers.api-uat.rule=Host(`${API_DOMAIN}`) && PathPrefix(`/api/v1`)"
      - "traefik.http.routers.api-uat.priority=100"
      - "traefik.http.routers.api-uat.entrypoints=websecure"
      - "traefik.http.routers.api-uat.tls=true"
      - "traefik.http.routers.api-uat.tls.certresolver=le"
      - "traefik.http.services.api-uat.loadbalancer.server.port=8000"


    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - edge
      - app

  web:
    image: ${IMAGE_TAG_FRONTEND}
    restart: unless-stopped
    env_file:
      - env/uat.env
      - env/image.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-uat.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.web-uat.entrypoints=websecure"
      - "traefik.http.routers.web-uat.tls=true"
      - "traefik.http.routers.web-uat.tls.certresolver=le"
      - "traefik.http.services.web-uat.loadbalancer.server.port=3000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/healthz"]
    networks:
      - edge