version: '3.8'

services:
  backend:
    image: projectmeats/backend:staging
    environment:
      - ENV=staging
    env_file:
      - ../backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - projectmeats-network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  frontend:
    image: projectmeats/frontend:staging
    environment:
      - NODE_ENV=production
    env_file:
      - ../frontend/.env.local
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - projectmeats-network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${STAGING_DB_NAME}
      - POSTGRES_USER=${STAGING_DB_USER}
      - POSTGRES_PASSWORD=${STAGING_DB_PASSWORD}
    networks:
      - projectmeats-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - projectmeats-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.staging.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - projectmeats-network

volumes:
  postgres_data:
  redis_data:

networks:
  projectmeats-network:
    driver: bridge